version: "3"

services:
  postgres:
    image: postgres:13.3
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    # command: postgres -c stats_temp_directory=/tmp
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - .:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  test:
    build:
      context: .
      dockerfile: Dockerfile-scraper-test
    env_file:
      - .env
    command: tests/run_tests.sh
    volumes:
      - .:/app

  scraper:
    build:
      context: .
      dockerfile: Dockerfile-scraper
    env_file:
      - .env
    command: run_scraping.sh
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      test:
        condition: service_completed_successfully

  webapp:
    build:
      context: .
      dockerfile: Dockerfile-webapp
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
       - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  database_data:
    driver: local
